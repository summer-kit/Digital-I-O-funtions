#include <Keypad.h>

const byte ROWS = 4;
const byte COLS = 4;

char myKeys[ROWS][COLS] = {
  {'1','2','3','+'},
  {'4','5','6','-'},
  {'7','8','9','*'},
  {'C','0','=','/'}
};

byte rowPins[ROWS] = {9,8,7,6};
byte colPins[COLS] = {5,4,3,2};


Keypad myKeypad = Keypad(makeKeymap(myKeys), rowPins, colPins, ROWS, COLS);

String firstNum; //첫번째 숫자를 지정하는 변수
String secondNum;
char sign; //부호를 저장하는 변수
boolean makeFirstNum=false; //첫번째 숫자 입력이 완료되었는지를 저장하는 변수
long calResult=0; //덧셈, 뺄셈, 곱셈 결과 값을 저장.
double calResult1=0.0; //나눗셈 결과값을 저장.

void setup () {
  Serial.begin(9600);
}

void loop () {
  char customKey = myKeypad.getKey();
  
  if(customKey){
    Serial.print(customKey);
    if (customKey>='0' && customKey<='9') {
      if(!makeFirstNum) firstNum += customKey;
      else secondNum += customKey;
    }
    if (customKey=='+' || customKey == '-' || customKey =='*' || customKey == '/') {
      sign = customKey;
      makeFirstNum = true;
    }
    
    if(customKey == '=') {
      switch(sign) {
        case '+' :
        calResult = firstNum.toInt()+secondNum.toInt();
        break;
        case '-' :
        calResult = firstNum.toInt()-secondNum.toInt();
        break;
        case'*' :
        calResult = firstNum.toInt()*secondNum.toInt();
        break;
        case '/' :
        calResult1 = (float)firstNum.toInt()/secondNum.toInt();
      }
      
      if (sign == '/') Serial.print(calResult1);
      else Serial.print(calResult);
    }
    
    if (customKey == 'C' && customKey == '=') {
      Serial.println();
      firstNum = " ";
      secondNum = " ";
      makeFirstNum = false;
    }
  }
}
